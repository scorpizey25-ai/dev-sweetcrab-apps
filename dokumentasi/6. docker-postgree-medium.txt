==================	ANALOGI DOCKER NETWORK & DOCKER COMPOSE	==================
Inti dari docker network dan docker compose adalah terletak infrastrukstur vs fungsionalitas.
Analogi pada "VirtualMachine"
	1. Docker Network
		Lebih condong ke arah infrastruktur, bagaimana antar container saling terkoneksi.
		analogi : Bagaimana antara VM1, VM2, VM3 dalam 1 host bisa sling terkoneksi,
				  misalkan ping / telnet antar VM
		
	2. Docker Compose
		Lebih condong ke arah fungsionalitas / orkestrasi setiap VM.
		analogi : Dimana fungsi VM1 ( webserver ) & VM2 ( database server ), kedua VM tersebut
				  tidak akan berfungsi jika tidak saling terkoneksi.
				  
		nb : Bukan berarti wajib menggunakan docker network dulu, ( seperti cara tradisonal model VM )
			 sebelum docker compose dibuat. Karena docker compose sudah mengintegrasi
			 komunikasi antar container kedalam 1 file YAML, sehingga infrastruktur + fungsionalitas
			 sudah menjadi satu.

Untuk automasi, maka anda bisa melompati docker network, karena docker compose mampu melakukan otomasi
tanpa kita tau cara kerja dari docker network.

NB : Docker compose adalah fundamental yang wajib dikuasi, karena Docker Compose menangani skala kecil,
	 maksudnya konektifitas + infrastruktur antar lintas container dalam 1 host server (lokal),
	 sebelum melangkah lebih jauh ke Orkestrasi Kubernetes dalam skala besar,
	 dimana antar lintas containar dalam banyak host server ( cluster )

==================	DOCKER COMPOSE	==================
Sebelumnya anda menggunakan "sudo docker run..." untuk menjalankan container,
dengan docker compose, anda cukup menjalankan file YAML yang sudah diresepkan,
jadi kesimpulannya anda migrasi dari "docker run" ke "docker compose"


	Bash
		sudo docker compose up -d
	
Intinya, docker compose itu adalah resep, dimana memiliki 3 pilar penting, 
yaitu network, service, & volumes untuk aplikasi multi containar.

1. Install docker compose		

	Bash
		sudo apt-get update
		sudo apt-get install docker-compose-plugin
	
2. 	Buat file yaml (yml) dengan nama "docker-compose.yml"
	step pertama untuk menjalankan container postgres
	
	Bash yaml

		services:
		  db:
			image: postgres
			container_name: dcon01-db-postgres
			environment:
			  POSTGRES_USER: ai-rootuser
			  POSTGRES_PASSWORD: ai-rootpass
			ports:
			  - "5432:5432"
			volumes:
			  - postgres-data:/var/lib/postgresql/data
			  
3. Jalankan docker-compose.yml

	Bash
		sudo docker compose up -d

	*** kemudian verifikasi container jalan : 
		sudo docker ps -a